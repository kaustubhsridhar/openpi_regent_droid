(openpi) (branch: main) ksridhar@ivy:~/openpi_regent_droid$ CUDA_VISIBLE_DEVICES=5 python scripts/test_pi0_fast_regent_no_interpolation.py
23:43:28.607 [I] Loading model...                                                                 (2984047:policy_config.py:102)
INFO:2025-03-06 23:43:29,178:jax._src.xla_bridge:945: Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
23:43:29.178 [I] Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig' (2984047:xla_bridge.py:945)
INFO:2025-03-06 23:43:29,179:jax._src.xla_bridge:945: Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
23:43:29.179 [I] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory (2984047:xla_bridge.py:945)
23:43:29.192 [I] orbax-checkpoint version: 0.11.1                                                 (2984047:abstract_checkpointer.py:35)
23:43:29.192 [I] Created BasePyTreeCheckpointHandler: pytree_metadata_options=PyTreeMetadataOptions(support_rich_types=False), array_metadata_store=None (2984047:base_pytree_checkpoint_handler.py:332)
23:43:29.261 [I] Restoring checkpoint from /home/ksridhar/openpi_regent_droid/checkpoints/pi0_fast_droid_regent/second_try/100/params. (2984047:checkpointer.py:256)
23:43:39.979 [I] [thread=MainThread] Failed to get flag value for EXPERIMENTAL_ORBAX_USE_DISTRIBUTED_PROCESS_ID. (2984047:multihost.py:375)
23:43:39.981 [I] [process=0] /jax/checkpoint/read/bytes_per_sec: 525.3 MiB/s (total bytes: 5.5 GiB) (time elapsed: 10 seconds) (per-host) (2984047:base_pytree_checkpoint_handler.py:113)
23:43:39.981 [I] Finished restoring checkpoint from /home/ksridhar/openpi_regent_droid/checkpoints/pi0_fast_droid_regent/second_try/100/params. (2984047:checkpointer.py:259)
23:43:39.982 [I] [process=0][thread=MainThread] Skipping global process sync, barrier name: Checkpointer:restore (2984047:multihost.py:293)
Some kwargs in processor config are unused and will not have any effect: vocab_size, min_token, scale, time_horizon, action_dim. 
Some kwargs in processor config are unused and will not have any effect: vocab_size, min_token, scale, time_horizon, action_dim. 
23:43:43.752 [I] Loaded norm stats from /home/ksridhar/openpi_regent_droid/assets/pi0_fast_droid_regent/droid (2984047:config.py:167)
23:43:43.770 [I] Loaded norm stats from checkpoints/pi0_fast_droid_regent/second_try/100/assets/droid (2984047:checkpoints.py:109)

23:43:43.773 [I] loading demos from regent_droid_preprocessing/collected_demos/2025-03-04...      (2984047:policy.py:103)

23:43:43.844 [I] building retrieval index...                                                      (2984047:policy.py:110)
23:43:43.845 [I] Using 8 omp threads (processes), consider increasing --nb_cores if you have more (2984047:quantize.py:193)
23:43:43.861 [I] Launching the whole pipeline 03/06/2025, 23:43:43                                (2984047:decorators.py:27)
23:43:43.861 [I] Reading total number of vectors and dimension 03/06/2025, 23:43:43               (2984047:decorators.py:27)
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 924.87it/s]
23:43:43.894 [I] There are 3158 embeddings of dim 2048                                            (2984047:quantize.py:213)
23:43:43.894 [I] >>> Finished "Reading total number of vectors and dimension" in 0.0333 secs      (2984047:decorators.py:38)
23:43:43.894 [I]        Compute estimated construction time of the index 03/06/2025, 23:43:43           (2984047:decorators.py:27)
23:43:43.894 [I]                -> Train: 16.7 minutes                                                         (2984047:quantize.py:217)
23:43:43.894 [I]                -> Add: 0.1 seconds                                                            (2984047:quantize.py:217)
23:43:43.894 [I]                Total: 16.7 minutes                                                            (2984047:quantize.py:217)
23:43:43.894 [I]        >>> Finished "Compute estimated construction time of the index" in 0.0001 secs  (2984047:decorators.py:38)
23:43:43.894 [I]        Checking that your have enough memory available to create the index 03/06/2025, 23:43:43 (2984047:decorators.py:27)
23:43:43.895 [I] 27.5MB of memory will be needed to build the index (more might be used if you have more) (2984047:quantize.py:223)
23:43:43.895 [I]        >>> Finished "Checking that your have enough memory available to create the index" in 0.0006 secs (2984047:decorators.py:38)
23:43:43.895 [I]        Selecting most promising index types given data characteristics 03/06/2025, 23:43:43 (2984047:decorators.py:27)
23:43:43.895 [I]        >>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs (2984047:decorators.py:38)
23:43:43.895 [I]        Creating the index 03/06/2025, 23:43:43                                         (2984047:decorators.py:27)
23:43:43.895 [I]                -> Instanciate the index HNSW15 03/06/2025, 23:43:43                           (2984047:decorators.py:27)
23:43:43.897 [I]                >>> Finished "-> Instanciate the index HNSW15" in 0.0013 secs                  (2984047:decorators.py:38)
23:43:43.897 [I]                -> Adding the vectors to the index 03/06/2025, 23:43:43                        (2984047:decorators.py:27)
23:43:43.897 [I] The memory available for adding the vectors is 50.0GB(total available - used by the index) (2984047:build.py:107)
23:43:43.897 [I] Using a batch size of 122070 (memory overhead 953.7MB)                           (2984047:build.py:88)
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  5.82it/s]
23:43:44.071 [I]        Computing best hyperparameters for index knn.index 03/06/2025, 23:43:44         (2984047:decorators.py:27)
23:43:47.845 [I]        >>> Finished "Computing best hyperparameters for index knn.index" in 3.7739 secs (2984047:decorators.py:38)
23:43:47.845 [I] The best hyperparameters are: efSearch=16383                                     (2984047:optimize.py:563)
23:43:47.845 [I]        Compute fast metrics 03/06/2025, 23:43:47                                       (2984047:decorators.py:27)
  0%|                                                                                                                                                                       | 0/1 [00:00<?, ?it/s]
23:43:53.015 [I]        >>> Finished "Compute fast metrics" in 5.1697 secs                              (2984047:decorators.py:38)
23:43:53.015 [I]                >>> Finished "-> Adding the vectors to the index" in 9.1185 secs               (2984047:decorators.py:38)
23:43:53.015 [I] {                                                                                (2984047:quantize.py:36)
23:43:53.015 [I]        index_key: HNSW15                                                               (2984047:quantize.py:38)
23:43:53.015 [I]        index_param: efSearch=16383                                                     (2984047:quantize.py:38)
23:43:53.015 [I]        index_path: knn.index                                                           (2984047:quantize.py:38)
23:43:53.015 [I]        size in bytes: 26299262                                                         (2984047:quantize.py:38)
23:43:53.015 [I]        avg_search_speed_ms: 2.54274363827426                                           (2984047:quantize.py:38)
23:43:53.015 [I]        99p_search_speed_ms: 2.9015232482925057                                         (2984047:quantize.py:38)
23:43:53.015 [I]        reconstruction error %: 0.0                                                     (2984047:quantize.py:38)
23:43:53.015 [I]        nb vectors: 3158                                                                (2984047:quantize.py:38)
23:43:53.015 [I]        vectors dimension: 2048                                                         (2984047:quantize.py:38)
23:43:53.015 [I]        compression ratio: 0.9836905689596918                                           (2984047:quantize.py:38)
23:43:53.015 [I] }                                                                                (2984047:quantize.py:39)
23:43:53.015 [I]        >>> Finished "Creating the index" in 9.1202 secs                                (2984047:decorators.py:38)
23:43:53.015 [I] >>> Finished "Launching the whole pipeline" in 9.1547 secs                       (2984047:decorators.py:38)

23:43:53.031 [I] retrieving...                                                                    (2984047:policy.py:148)
23:43:59.960 [I] transforming...                                                                  (2984047:policy.py:151)
23:43:59.968 [I] batching...                                                                      (2984047:policy.py:155)
23:44:00.365 [I] sampling...                                                                      (2984047:policy.py:159)
query_prompt_len: 43
max_decoding_steps: 137
prefix_token_embeddings shape: (1, 4015, 2048)
prefix_attn_mask shape: (1, 4015, 4015)
prefix_attn_mask shape: (1, 4015, 4152)
prefix_positions shape: (1, 4015)
last_logit_old shape: (1, 1, 257152)
last_logit shape: (1, 1, 257152)
mask shape: (1, 1, 4152)
mask values: Traced<ShapedArray(bool[1,1,4152])>with<DynamicJaxprTrace>
positions shape: (1, 1)
positions values: Traced<ShapedArray(int32[1,1])>with<DynamicJaxprTrace>
token_embedding shape: (1, 1, 2048)
last_logit_old shape: (1, 1, 257152)
last_logit shape: (1, 1, 257152)
23:44:18.501 [I] unbatching...                                                                    (2984047:policy.py:166)
outputs: {'query_actions': array([2.56765e+05, 2.56767e+05, 2.35371e+05, 1.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00, 0.00000e+00,
       0.00000e+00, 0.00000e+00], dtype=float32), 'query_state': array([-0.04461831, -1.7787437 ,  0.03942934, -1.0198333 ,  0.02780539,
       -0.9645093 , -0.1012767 , -0.9755486 ], dtype=float32)}
23:44:18.560 [I] final_outputs: {'query_actions': array([[-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01]])} (2984047:policy.py:172)
action_chunk.shape=(10, 8)
action_chunk=array([[-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01],
       [-4.51024157e-03,  1.61404632e-02,  1.44883636e-03,
         3.11631333e-02,  1.04391526e-03, -2.07705610e-04,
         4.28350419e-03,  4.46768843e-01]])