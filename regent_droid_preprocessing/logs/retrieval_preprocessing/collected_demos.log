nohup: ignoring input
skipping ds_name='collected_demos/2025-03-14_move_the_idli_plate_to_the_right' because groups_to_ep_fols.json exists. If you want to re-run, delete the four json files at collected_demos/2025-03-14_move_the_idli_plate_to_the_right/.
skipping ds_name='collected_demos/2025-03-17_pick_up_the_poke_ball_and_put_it_in_the_tray' because groups_to_ep_fols.json exists. If you want to re-run, delete the four json files at collected_demos/2025-03-17_pick_up_the_poke_ball_and_put_it_in_the_tray/.
skipping ds_name='collected_demos/2025-03-14-5demos_move_the_idli_plate_to_the_right' because groups_to_ep_fols.json exists. If you want to re-run, delete the four json files at collected_demos/2025-03-14-5demos_move_the_idli_plate_to_the_right/.
skipping ds_name='collected_demos/2025-03-14-10demos_move_the_idli_plate_to_the_right' because groups_to_ep_fols.json exists. If you want to re-run, delete the four json files at collected_demos/2025-03-14-10demos_move_the_idli_plate_to_the_right/.
skipping ds_name='collected_demos/2025-03-27_move_the_squeegee_to_the_right_and_try_to_drag_it' because groups_to_ep_fols.json exists. If you want to re-run, delete the four json files at collected_demos/2025-03-27_move_the_squeegee_to_the_right_and_try_to_drag_it/.
2025-04-07 23:05:02: [retrieval_preprocessing] starting retrieval preprocessing for top_image
2025-04-07 23:05:02: [retrieval_preprocessing] concatenated all embeddings and indices for 21 episodes for collected_demos/2025-04-07_open_the_door_of_the_bottom_shelf [chosen_id count 0/1]
2025-04-07 23:05:02: [retrieval_preprocessing] we have num_total=988 embedding_dim=49152
[retrieval_preprocessing] for episode 100000 [episode count 0/21], we have num_retrieval=np.int64(929) num_query=np.int64(59)
2025-04-07 23:05:02,988 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:05:03,096 [INFO]: Launching the whole pipeline 04/07/2025, 23:05:03
2025-04-07 23:05:03,096 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:05:03
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 2516.08it/s]
2025-04-07 23:05:03,135 [INFO]: There are 929 embeddings of dim 49152
2025-04-07 23:05:03,135 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0391 secs
2025-04-07 23:05:03,136 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:05:03
2025-04-07 23:05:03,136 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:05:03,136 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:05:03,136 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:05:03,136 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0004 secs
2025-04-07 23:05:03,136 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:05:03
2025-04-07 23:05:03,138 [INFO]: 191.6MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:05:03,138 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0016 secs
2025-04-07 23:05:03,138 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:05:03
2025-04-07 23:05:03,138 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:05:03,138 [INFO]: 	Creating the index 04/07/2025, 23:05:03
2025-04-07 23:05:03,138 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:05:03
2025-04-07 23:05:03,139 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0004 secs
2025-04-07 23:05:03,139 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:05:03
2025-04-07 23:05:03,139 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:05:03,139 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 25.57it/s]100%|██████████| 4/4 [00:00<00:00, 25.35it/s]
2025-04-07 23:05:03,302 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:05:03
2025-04-07 23:05:03,302 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:05:03,302 [INFO]: The best hyperparameters are: 
2025-04-07 23:05:03,302 [INFO]: 	Compute fast metrics 04/07/2025, 23:05:03
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 27.03it/s]
2025-04-07 23:05:14,068 [INFO]: 	>>> Finished "Compute fast metrics" in 10.7652 secs
2025-04-07 23:05:14,069 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9294 secs
2025-04-07 23:05:14,069 [INFO]: {
2025-04-07 23:05:14,069 [INFO]: 	index_key: Flat
2025-04-07 23:05:14,069 [INFO]: 	index_param: 
2025-04-07 23:05:14,069 [INFO]: 	index_path: knn.index
2025-04-07 23:05:14,069 [INFO]: 	size in bytes: 182648877
2025-04-07 23:05:14,069 [INFO]: 	avg_search_speed_ms: 11.876778596500046
2025-04-07 23:05:14,069 [INFO]: 	99p_search_speed_ms: 14.74859940179158
2025-04-07 23:05:14,069 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:05:14,069 [INFO]: 	nb vectors: 929
2025-04-07 23:05:14,069 [INFO]: 	vectors dimension: 49152
2025-04-07 23:05:14,069 [INFO]: 	compression ratio: 0.999999753625641
2025-04-07 23:05:14,069 [INFO]: }
2025-04-07 23:05:14,069 [INFO]: 	>>> Finished "Creating the index" in 10.9306 secs
2025-04-07 23:05:14,069 [INFO]: >>> Finished "Launching the whole pipeline" in 10.9728 secs
2025-04-07 23:05:14: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:05:14: [retrieval_preprocessing] finished and saved retrieval indices for episode 100000 [episode count 0/21]
[retrieval_preprocessing] for episode 100001 [episode count 1/21], we have num_retrieval=np.int64(936) num_query=np.int64(52)
2025-04-07 23:05:14,593 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:05:14,690 [INFO]: Launching the whole pipeline 04/07/2025, 23:05:14
2025-04-07 23:05:14,690 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:05:14
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1484.71it/s]
2025-04-07 23:05:14,722 [INFO]: There are 936 embeddings of dim 49152
2025-04-07 23:05:14,723 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0327 secs
2025-04-07 23:05:14,723 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:05:14
2025-04-07 23:05:14,723 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:05:14,723 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:05:14,723 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:05:14,723 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0003 secs
2025-04-07 23:05:14,723 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:05:14
2025-04-07 23:05:14,723 [INFO]: 193.0MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:05:14,724 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0004 secs
2025-04-07 23:05:14,724 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:05:14
2025-04-07 23:05:14,724 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:05:14,724 [INFO]: 	Creating the index 04/07/2025, 23:05:14
2025-04-07 23:05:14,724 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:05:14
2025-04-07 23:05:14,725 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0004 secs
2025-04-07 23:05:14,725 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:05:14
2025-04-07 23:05:14,725 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:05:14,725 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 26.04it/s]100%|██████████| 4/4 [00:00<00:00, 25.84it/s]
2025-04-07 23:05:14,884 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:05:14
2025-04-07 23:05:14,885 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:05:14,885 [INFO]: The best hyperparameters are: 
2025-04-07 23:05:14,885 [INFO]: 	Compute fast metrics 04/07/2025, 23:05:14
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.93it/s]
2025-04-07 23:05:25,661 [INFO]: 	>>> Finished "Compute fast metrics" in 10.7763 secs
2025-04-07 23:05:25,662 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9370 secs
2025-04-07 23:05:25,662 [INFO]: {
2025-04-07 23:05:25,662 [INFO]: 	index_key: Flat
2025-04-07 23:05:25,662 [INFO]: 	index_param: 
2025-04-07 23:05:25,662 [INFO]: 	index_path: knn.index
2025-04-07 23:05:25,662 [INFO]: 	size in bytes: 184025133
2025-04-07 23:05:25,662 [INFO]: 	avg_search_speed_ms: 12.287219958073809
2025-04-07 23:05:25,662 [INFO]: 	99p_search_speed_ms: 14.955387604422867
2025-04-07 23:05:25,662 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:05:25,662 [INFO]: 	nb vectors: 936
2025-04-07 23:05:25,662 [INFO]: 	vectors dimension: 49152
2025-04-07 23:05:25,662 [INFO]: 	compression ratio: 0.9999997554681838
2025-04-07 23:05:25,662 [INFO]: }
2025-04-07 23:05:25,662 [INFO]: 	>>> Finished "Creating the index" in 10.9381 secs
2025-04-07 23:05:25,662 [INFO]: >>> Finished "Launching the whole pipeline" in 10.9724 secs
2025-04-07 23:05:25: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:05:26: [retrieval_preprocessing] finished and saved retrieval indices for episode 100001 [episode count 1/21]
[retrieval_preprocessing] for episode 100002 [episode count 2/21], we have num_retrieval=np.int64(892) num_query=np.int64(96)
2025-04-07 23:05:26,142 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:05:26,238 [INFO]: Launching the whole pipeline 04/07/2025, 23:05:26
2025-04-07 23:05:26,238 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:05:26
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1266.78it/s]
2025-04-07 23:05:26,268 [INFO]: There are 892 embeddings of dim 49152
2025-04-07 23:05:26,268 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0294 secs
2025-04-07 23:05:26,268 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:05:26,268 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:05:26,268 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:05:26,268 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:05:26,268 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: 184.0MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:05:26,268 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:05:26,268 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:05:26,268 [INFO]: 	Creating the index 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0001 secs
2025-04-07 23:05:26,268 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:05:26
2025-04-07 23:05:26,268 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:05:26,269 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 30.52it/s]100%|██████████| 4/4 [00:00<00:00, 30.20it/s]
2025-04-07 23:05:26,403 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:05:26
2025-04-07 23:05:26,403 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:05:26,403 [INFO]: The best hyperparameters are: 
2025-04-07 23:05:26,403 [INFO]: 	Compute fast metrics 04/07/2025, 23:05:26
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.41it/s]
2025-04-07 23:05:37,148 [INFO]: 	>>> Finished "Compute fast metrics" in 10.7445 secs
2025-04-07 23:05:37,149 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.8800 secs
2025-04-07 23:05:37,149 [INFO]: {
2025-04-07 23:05:37,149 [INFO]: 	index_key: Flat
2025-04-07 23:05:37,149 [INFO]: 	index_param: 
2025-04-07 23:05:37,149 [INFO]: 	index_path: knn.index
2025-04-07 23:05:37,149 [INFO]: 	size in bytes: 175374381
2025-04-07 23:05:37,149 [INFO]: 	avg_search_speed_ms: 11.195055107529832
2025-04-07 23:05:37,149 [INFO]: 	99p_search_speed_ms: 11.979130792315116
2025-04-07 23:05:37,149 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:05:37,149 [INFO]: 	nb vectors: 892
2025-04-07 23:05:37,149 [INFO]: 	vectors dimension: 49152
2025-04-07 23:05:37,149 [INFO]: 	compression ratio: 0.9999997434060793
2025-04-07 23:05:37,149 [INFO]: }
2025-04-07 23:05:37,149 [INFO]: 	>>> Finished "Creating the index" in 10.8805 secs
2025-04-07 23:05:37,149 [INFO]: >>> Finished "Launching the whole pipeline" in 10.9104 secs
2025-04-07 23:05:37: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:05:37: [retrieval_preprocessing] finished and saved retrieval indices for episode 100002 [episode count 2/21]
[retrieval_preprocessing] for episode 100003 [episode count 3/21], we have num_retrieval=np.int64(941) num_query=np.int64(47)
2025-04-07 23:05:37,898 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:05:37,999 [INFO]: Launching the whole pipeline 04/07/2025, 23:05:37
2025-04-07 23:05:37,999 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:05:37
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1782.53it/s]
2025-04-07 23:05:38,027 [INFO]: There are 941 embeddings of dim 49152
2025-04-07 23:05:38,027 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0286 secs
2025-04-07 23:05:38,027 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:05:38
2025-04-07 23:05:38,027 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:05:38,027 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:05:38,027 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:05:38,027 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:05:38,027 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:05:38
2025-04-07 23:05:38,028 [INFO]: 194.1MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:05:38,028 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:05:38,028 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:05:38
2025-04-07 23:05:38,028 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:05:38,028 [INFO]: 	Creating the index 04/07/2025, 23:05:38
2025-04-07 23:05:38,028 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:05:38
2025-04-07 23:05:38,028 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:05:38,028 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:05:38
2025-04-07 23:05:38,028 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:05:38,028 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 28.41it/s]100%|██████████| 4/4 [00:00<00:00, 28.16it/s]
2025-04-07 23:05:38,172 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:05:38
2025-04-07 23:05:38,173 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:05:38,173 [INFO]: The best hyperparameters are: 
2025-04-07 23:05:38,173 [INFO]: 	Compute fast metrics 04/07/2025, 23:05:38
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.09it/s]
2025-04-07 23:05:48,945 [INFO]: 	>>> Finished "Compute fast metrics" in 10.7724 secs
2025-04-07 23:05:48,946 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9179 secs
2025-04-07 23:05:48,946 [INFO]: {
2025-04-07 23:05:48,946 [INFO]: 	index_key: Flat
2025-04-07 23:05:48,946 [INFO]: 	index_param: 
2025-04-07 23:05:48,946 [INFO]: 	index_path: knn.index
2025-04-07 23:05:48,946 [INFO]: 	size in bytes: 185008173
2025-04-07 23:05:48,946 [INFO]: 	avg_search_speed_ms: 11.872283897135066
2025-04-07 23:05:48,946 [INFO]: 	99p_search_speed_ms: 12.578444686951125
2025-04-07 23:05:48,946 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:05:48,946 [INFO]: 	nb vectors: 941
2025-04-07 23:05:48,946 [INFO]: 	vectors dimension: 49152
2025-04-07 23:05:48,946 [INFO]: 	compression ratio: 0.9999997567675024
2025-04-07 23:05:48,946 [INFO]: }
2025-04-07 23:05:48,946 [INFO]: 	>>> Finished "Creating the index" in 10.9185 secs
2025-04-07 23:05:48,946 [INFO]: >>> Finished "Launching the whole pipeline" in 10.9476 secs
2025-04-07 23:05:49: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:05:49: [retrieval_preprocessing] finished and saved retrieval indices for episode 100003 [episode count 3/21]
[retrieval_preprocessing] for episode 100004 [episode count 4/21], we have num_retrieval=np.int64(952) num_query=np.int64(36)
2025-04-07 23:05:49,375 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:05:49,474 [INFO]: Launching the whole pipeline 04/07/2025, 23:05:49
2025-04-07 23:05:49,475 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:05:49
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1591.16it/s]
2025-04-07 23:05:49,503 [INFO]: There are 952 embeddings of dim 49152
2025-04-07 23:05:49,503 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0284 secs
2025-04-07 23:05:49,503 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:05:49
2025-04-07 23:05:49,503 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:05:49,503 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:05:49,503 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:05:49,503 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:05:49,503 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:05:49
2025-04-07 23:05:49,503 [INFO]: 196.3MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:05:49,503 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:05:49,503 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:05:49
2025-04-07 23:05:49,503 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:05:49,503 [INFO]: 	Creating the index 04/07/2025, 23:05:49
2025-04-07 23:05:49,503 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:05:49
2025-04-07 23:05:49,504 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0001 secs
2025-04-07 23:05:49,504 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:05:49
2025-04-07 23:05:49,504 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:05:49,504 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.42it/s]100%|██████████| 4/4 [00:00<00:00, 22.83it/s]
2025-04-07 23:05:49,681 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:05:49
2025-04-07 23:05:49,681 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:05:49,681 [INFO]: The best hyperparameters are: 
2025-04-07 23:05:49,681 [INFO]: 	Compute fast metrics 04/07/2025, 23:05:49
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.72it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.75it/s]
2025-04-07 23:06:00,496 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8147 secs
2025-04-07 23:06:00,497 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9936 secs
2025-04-07 23:06:00,497 [INFO]: {
2025-04-07 23:06:00,497 [INFO]: 	index_key: Flat
2025-04-07 23:06:00,497 [INFO]: 	index_param: 
2025-04-07 23:06:00,497 [INFO]: 	index_path: knn.index
2025-04-07 23:06:00,497 [INFO]: 	size in bytes: 187170861
2025-04-07 23:06:00,497 [INFO]: 	avg_search_speed_ms: 12.01680095587932
2025-04-07 23:06:00,497 [INFO]: 	99p_search_speed_ms: 13.21407185634598
2025-04-07 23:06:00,497 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:00,497 [INFO]: 	nb vectors: 952
2025-04-07 23:06:00,497 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:00,497 [INFO]: 	compression ratio: 0.9999997595779613
2025-04-07 23:06:00,497 [INFO]: }
2025-04-07 23:06:00,497 [INFO]: 	>>> Finished "Creating the index" in 10.9940 secs
2025-04-07 23:06:00,497 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0229 secs
2025-04-07 23:06:00: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:00: [retrieval_preprocessing] finished and saved retrieval indices for episode 100004 [episode count 4/21]
[retrieval_preprocessing] for episode 100005 [episode count 5/21], we have num_retrieval=np.int64(932) num_query=np.int64(56)
2025-04-07 23:06:00,878 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:00,974 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:00
2025-04-07 23:06:00,974 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:00
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1126.29it/s]
2025-04-07 23:06:01,003 [INFO]: There are 932 embeddings of dim 49152
2025-04-07 23:06:01,004 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0299 secs
2025-04-07 23:06:01,004 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:01,004 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:01,004 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:01,004 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:06:01,004 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: 192.2MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:01,004 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:06:01,004 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:01,004 [INFO]: 	Creating the index 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:06:01,004 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:01
2025-04-07 23:06:01,004 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:01,004 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.88it/s]100%|██████████| 4/4 [00:00<00:00, 23.46it/s]
2025-04-07 23:06:01,178 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:01
2025-04-07 23:06:01,178 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:01,178 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:01,178 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:01
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.65it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.91it/s]
2025-04-07 23:06:11,985 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8068 secs
2025-04-07 23:06:11,986 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9811 secs
2025-04-07 23:06:11,986 [INFO]: {
2025-04-07 23:06:11,986 [INFO]: 	index_key: Flat
2025-04-07 23:06:11,986 [INFO]: 	index_param: 
2025-04-07 23:06:11,986 [INFO]: 	index_path: knn.index
2025-04-07 23:06:11,986 [INFO]: 	size in bytes: 183238701
2025-04-07 23:06:11,986 [INFO]: 	avg_search_speed_ms: 11.736621709167192
2025-04-07 23:06:11,986 [INFO]: 	99p_search_speed_ms: 13.40797237411607
2025-04-07 23:06:11,986 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:11,986 [INFO]: 	nb vectors: 932
2025-04-07 23:06:11,986 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:11,986 [INFO]: 	compression ratio: 0.9999997544186913
2025-04-07 23:06:11,986 [INFO]: }
2025-04-07 23:06:11,986 [INFO]: 	>>> Finished "Creating the index" in 10.9817 secs
2025-04-07 23:06:11,986 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0121 secs
2025-04-07 23:06:12: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:12: [retrieval_preprocessing] finished and saved retrieval indices for episode 100005 [episode count 5/21]
[retrieval_preprocessing] for episode 100006 [episode count 6/21], we have num_retrieval=np.int64(951) num_query=np.int64(37)
2025-04-07 23:06:12,493 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:12,593 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:12
2025-04-07 23:06:12,593 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:12
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1628.22it/s]
2025-04-07 23:06:12,625 [INFO]: There are 951 embeddings of dim 49152
2025-04-07 23:06:12,626 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0323 secs
2025-04-07 23:06:12,626 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:12
2025-04-07 23:06:12,626 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:12,626 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:12,626 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:12,626 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0003 secs
2025-04-07 23:06:12,626 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:12
2025-04-07 23:06:12,627 [INFO]: 196.1MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:12,627 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0004 secs
2025-04-07 23:06:12,627 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:12
2025-04-07 23:06:12,627 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:12,627 [INFO]: 	Creating the index 04/07/2025, 23:06:12
2025-04-07 23:06:12,627 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:12
2025-04-07 23:06:12,628 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0004 secs
2025-04-07 23:06:12,628 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:12
2025-04-07 23:06:12,628 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:12,628 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 25.13it/s]100%|██████████| 4/4 [00:00<00:00, 24.88it/s]
2025-04-07 23:06:12,793 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:12
2025-04-07 23:06:12,793 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:12,793 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:12,793 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:12
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 27.87it/s] 75%|███████▌  | 3/4 [00:00<00:00, 25.10it/s]
2025-04-07 23:06:23,626 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8323 secs
2025-04-07 23:06:23,627 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9988 secs
2025-04-07 23:06:23,627 [INFO]: {
2025-04-07 23:06:23,627 [INFO]: 	index_key: Flat
2025-04-07 23:06:23,627 [INFO]: 	index_param: 
2025-04-07 23:06:23,627 [INFO]: 	index_path: knn.index
2025-04-07 23:06:23,627 [INFO]: 	size in bytes: 186974253
2025-04-07 23:06:23,627 [INFO]: 	avg_search_speed_ms: 12.090885285566817
2025-04-07 23:06:23,627 [INFO]: 	99p_search_speed_ms: 13.788202293217182
2025-04-07 23:06:23,627 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:23,627 [INFO]: 	nb vectors: 951
2025-04-07 23:06:23,627 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:23,627 [INFO]: 	compression ratio: 0.9999997593251516
2025-04-07 23:06:23,627 [INFO]: }
2025-04-07 23:06:23,627 [INFO]: 	>>> Finished "Creating the index" in 10.9997 secs
2025-04-07 23:06:23,627 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0335 secs
2025-04-07 23:06:23: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:23: [retrieval_preprocessing] finished and saved retrieval indices for episode 100006 [episode count 6/21]
[retrieval_preprocessing] for episode 100007 [episode count 7/21], we have num_retrieval=np.int64(954) num_query=np.int64(34)
2025-04-07 23:06:24,008 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:24,118 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:24
2025-04-07 23:06:24,118 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:24
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1792.44it/s]
2025-04-07 23:06:24,145 [INFO]: There are 954 embeddings of dim 49152
2025-04-07 23:06:24,145 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0273 secs
2025-04-07 23:06:24,145 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:24
2025-04-07 23:06:24,145 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:24,145 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:24,145 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:24,145 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:06:24,145 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:24
2025-04-07 23:06:24,145 [INFO]: 196.8MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:24,146 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:06:24,146 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:24
2025-04-07 23:06:24,146 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:24,146 [INFO]: 	Creating the index 04/07/2025, 23:06:24
2025-04-07 23:06:24,146 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:24
2025-04-07 23:06:24,146 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:06:24,146 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:24
2025-04-07 23:06:24,146 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:24,146 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.86it/s]100%|██████████| 4/4 [00:00<00:00, 23.47it/s]
2025-04-07 23:06:24,319 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:24
2025-04-07 23:06:24,319 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:24,319 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:24,319 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:24
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.63it/s] 75%|███████▌  | 3/4 [00:00<00:00, 25.52it/s]
2025-04-07 23:06:35,162 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8431 secs
2025-04-07 23:06:35,163 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 11.0168 secs
2025-04-07 23:06:35,163 [INFO]: {
2025-04-07 23:06:35,163 [INFO]: 	index_key: Flat
2025-04-07 23:06:35,163 [INFO]: 	index_param: 
2025-04-07 23:06:35,163 [INFO]: 	index_path: knn.index
2025-04-07 23:06:35,163 [INFO]: 	size in bytes: 187564077
2025-04-07 23:06:35,163 [INFO]: 	avg_search_speed_ms: 12.577481702139965
2025-04-07 23:06:35,163 [INFO]: 	99p_search_speed_ms: 15.156882479786871
2025-04-07 23:06:35,163 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:35,163 [INFO]: 	nb vectors: 954
2025-04-07 23:06:35,163 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:35,163 [INFO]: 	compression ratio: 0.9999997600819905
2025-04-07 23:06:35,163 [INFO]: }
2025-04-07 23:06:35,163 [INFO]: 	>>> Finished "Creating the index" in 11.0174 secs
2025-04-07 23:06:35,163 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0452 secs
2025-04-07 23:06:35: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:35: [retrieval_preprocessing] finished and saved retrieval indices for episode 100007 [episode count 7/21]
[retrieval_preprocessing] for episode 100008 [episode count 8/21], we have num_retrieval=np.int64(953) num_query=np.int64(35)
2025-04-07 23:06:35,575 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:35,685 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:35
2025-04-07 23:06:35,685 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:35
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1572.08it/s]
2025-04-07 23:06:35,715 [INFO]: There are 953 embeddings of dim 49152
2025-04-07 23:06:35,715 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0298 secs
2025-04-07 23:06:35,715 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:35
2025-04-07 23:06:35,715 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:35,715 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:35,715 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:35,715 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:06:35,715 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:35
2025-04-07 23:06:35,715 [INFO]: 196.6MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:35,715 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:06:35,715 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:35
2025-04-07 23:06:35,715 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:35,715 [INFO]: 	Creating the index 04/07/2025, 23:06:35
2025-04-07 23:06:35,715 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:35
2025-04-07 23:06:35,716 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:06:35,716 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:35
2025-04-07 23:06:35,716 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:35,716 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.41it/s]100%|██████████| 4/4 [00:00<00:00, 23.08it/s]
2025-04-07 23:06:35,891 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:35
2025-04-07 23:06:35,892 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:35,892 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:35,892 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:35
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.75it/s]
2025-04-07 23:06:46,708 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8160 secs
2025-04-07 23:06:46,709 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9928 secs
2025-04-07 23:06:46,709 [INFO]: {
2025-04-07 23:06:46,709 [INFO]: 	index_key: Flat
2025-04-07 23:06:46,709 [INFO]: 	index_param: 
2025-04-07 23:06:46,709 [INFO]: 	index_path: knn.index
2025-04-07 23:06:46,709 [INFO]: 	size in bytes: 187367469
2025-04-07 23:06:46,709 [INFO]: 	avg_search_speed_ms: 12.701732763928375
2025-04-07 23:06:46,709 [INFO]: 	99p_search_speed_ms: 15.400717104203068
2025-04-07 23:06:46,709 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:46,709 [INFO]: 	nb vectors: 953
2025-04-07 23:06:46,709 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:46,709 [INFO]: 	compression ratio: 0.9999997598302404
2025-04-07 23:06:46,709 [INFO]: }
2025-04-07 23:06:46,709 [INFO]: 	>>> Finished "Creating the index" in 10.9934 secs
2025-04-07 23:06:46,709 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0237 secs
2025-04-07 23:06:46: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:47: [retrieval_preprocessing] finished and saved retrieval indices for episode 100008 [episode count 8/21]
[retrieval_preprocessing] for episode 100009 [episode count 9/21], we have num_retrieval=np.int64(956) num_query=np.int64(32)
2025-04-07 23:06:47,076 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:47,176 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:47
2025-04-07 23:06:47,176 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:47
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 2537.39it/s]
2025-04-07 23:06:47,204 [INFO]: There are 956 embeddings of dim 49152
2025-04-07 23:06:47,204 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0275 secs
2025-04-07 23:06:47,204 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:47
2025-04-07 23:06:47,204 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:47,204 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:47,204 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:47,204 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:06:47,204 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:47
2025-04-07 23:06:47,204 [INFO]: 197.2MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:47,204 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:06:47,204 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:47
2025-04-07 23:06:47,204 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:47,204 [INFO]: 	Creating the index 04/07/2025, 23:06:47
2025-04-07 23:06:47,204 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:47
2025-04-07 23:06:47,205 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:06:47,205 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:47
2025-04-07 23:06:47,205 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:47,205 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.90it/s]100%|██████████| 4/4 [00:00<00:00, 23.03it/s]
2025-04-07 23:06:47,380 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:47
2025-04-07 23:06:47,381 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:47,381 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:47,381 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:47
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 29.87it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.76it/s]
2025-04-07 23:06:58,187 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8065 secs
2025-04-07 23:06:58,188 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9836 secs
2025-04-07 23:06:58,188 [INFO]: {
2025-04-07 23:06:58,188 [INFO]: 	index_key: Flat
2025-04-07 23:06:58,188 [INFO]: 	index_param: 
2025-04-07 23:06:58,188 [INFO]: 	index_path: knn.index
2025-04-07 23:06:58,188 [INFO]: 	size in bytes: 187957293
2025-04-07 23:06:58,188 [INFO]: 	avg_search_speed_ms: 12.195511836141188
2025-04-07 23:06:58,188 [INFO]: 	99p_search_speed_ms: 13.820321246166712
2025-04-07 23:06:58,188 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:06:58,188 [INFO]: 	nb vectors: 956
2025-04-07 23:06:58,188 [INFO]: 	vectors dimension: 49152
2025-04-07 23:06:58,188 [INFO]: 	compression ratio: 0.9999997605839109
2025-04-07 23:06:58,188 [INFO]: }
2025-04-07 23:06:58,188 [INFO]: 	>>> Finished "Creating the index" in 10.9842 secs
2025-04-07 23:06:58,188 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0121 secs
2025-04-07 23:06:58: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:06:58: [retrieval_preprocessing] finished and saved retrieval indices for episode 100009 [episode count 9/21]
[retrieval_preprocessing] for episode 100010 [episode count 10/21], we have num_retrieval=np.int64(957) num_query=np.int64(31)
2025-04-07 23:06:58,540 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:06:58,642 [INFO]: Launching the whole pipeline 04/07/2025, 23:06:58
2025-04-07 23:06:58,642 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:06:58
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1571.49it/s]
2025-04-07 23:06:58,670 [INFO]: There are 957 embeddings of dim 49152
2025-04-07 23:06:58,671 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0288 secs
2025-04-07 23:06:58,671 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:06:58,671 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:06:58,671 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:06:58,671 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:06:58,671 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: 197.4MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:06:58,671 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:06:58,671 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:06:58,671 [INFO]: 	Creating the index 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0001 secs
2025-04-07 23:06:58,671 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:06:58
2025-04-07 23:06:58,671 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:06:58,671 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 50%|█████     | 2/4 [00:00<00:00, 19.81it/s]100%|██████████| 4/4 [00:00<00:00, 22.50it/s]
2025-04-07 23:06:58,851 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:06:58
2025-04-07 23:06:58,851 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:06:58,851 [INFO]: The best hyperparameters are: 
2025-04-07 23:06:58,851 [INFO]: 	Compute fast metrics 04/07/2025, 23:06:58
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 28.33it/s] 75%|███████▌  | 3/4 [00:00<00:00, 25.67it/s]
2025-04-07 23:07:09,660 [INFO]: 	>>> Finished "Compute fast metrics" in 10.8080 secs
2025-04-07 23:07:09,660 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9890 secs
2025-04-07 23:07:09,660 [INFO]: {
2025-04-07 23:07:09,660 [INFO]: 	index_key: Flat
2025-04-07 23:07:09,660 [INFO]: 	index_param: 
2025-04-07 23:07:09,660 [INFO]: 	index_path: knn.index
2025-04-07 23:07:09,660 [INFO]: 	size in bytes: 188153901
2025-04-07 23:07:09,660 [INFO]: 	avg_search_speed_ms: 12.264172419236274
2025-04-07 23:07:09,660 [INFO]: 	99p_search_speed_ms: 14.99844920472242
2025-04-07 23:07:09,660 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:07:09,660 [INFO]: 	nb vectors: 957
2025-04-07 23:07:09,660 [INFO]: 	vectors dimension: 49152
2025-04-07 23:07:09,660 [INFO]: 	compression ratio: 0.9999997608340845
2025-04-07 23:07:09,660 [INFO]: }
2025-04-07 23:07:09,661 [INFO]: 	>>> Finished "Creating the index" in 10.9894 secs
2025-04-07 23:07:09,661 [INFO]: >>> Finished "Launching the whole pipeline" in 11.0187 secs
2025-04-07 23:07:09: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:07:09: [retrieval_preprocessing] finished and saved retrieval indices for episode 100010 [episode count 10/21]
[retrieval_preprocessing] for episode 100011 [episode count 11/21], we have num_retrieval=np.int64(937) num_query=np.int64(51)
2025-04-07 23:07:10,000 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:07:10,095 [INFO]: Launching the whole pipeline 04/07/2025, 23:07:10
2025-04-07 23:07:10,095 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:07:10
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 1833.17it/s]
2025-04-07 23:07:10,122 [INFO]: There are 937 embeddings of dim 49152
2025-04-07 23:07:10,122 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0265 secs
2025-04-07 23:07:10,122 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:07:10
2025-04-07 23:07:10,122 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:07:10,122 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:07:10,122 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:07:10,122 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:07:10,122 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:07:10
2025-04-07 23:07:10,122 [INFO]: 193.3MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:07:10,122 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:07:10,122 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:07:10
2025-04-07 23:07:10,122 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:07:10,122 [INFO]: 	Creating the index 04/07/2025, 23:07:10
2025-04-07 23:07:10,122 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:07:10
2025-04-07 23:07:10,123 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0002 secs
2025-04-07 23:07:10,123 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:07:10
2025-04-07 23:07:10,123 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:07:10,123 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 25.83it/s]100%|██████████| 4/4 [00:00<00:00, 25.65it/s]
2025-04-07 23:07:10,281 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:07:10
2025-04-07 23:07:10,281 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:07:10,281 [INFO]: The best hyperparameters are: 
2025-04-07 23:07:10,281 [INFO]: 	Compute fast metrics 04/07/2025, 23:07:10
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 27.94it/s] 75%|███████▌  | 3/4 [00:00<00:00, 25.10it/s]
2025-04-07 23:07:21,049 [INFO]: 	>>> Finished "Compute fast metrics" in 10.7678 secs
2025-04-07 23:07:21,050 [INFO]: 		>>> Finished "-> Adding the vectors to the index" in 10.9268 secs
2025-04-07 23:07:21,050 [INFO]: {
2025-04-07 23:07:21,050 [INFO]: 	index_key: Flat
2025-04-07 23:07:21,050 [INFO]: 	index_param: 
2025-04-07 23:07:21,050 [INFO]: 	index_path: knn.index
2025-04-07 23:07:21,050 [INFO]: 	size in bytes: 184221741
2025-04-07 23:07:21,050 [INFO]: 	avg_search_speed_ms: 11.880403367422009
2025-04-07 23:07:21,050 [INFO]: 	99p_search_speed_ms: 14.841122717480175
2025-04-07 23:07:21,050 [INFO]: 	reconstruction error %: 0.0
2025-04-07 23:07:21,050 [INFO]: 	nb vectors: 937
2025-04-07 23:07:21,050 [INFO]: 	vectors dimension: 49152
2025-04-07 23:07:21,050 [INFO]: 	compression ratio: 0.9999997557291569
2025-04-07 23:07:21,050 [INFO]: }
2025-04-07 23:07:21,050 [INFO]: 	>>> Finished "Creating the index" in 10.9274 secs
2025-04-07 23:07:21,050 [INFO]: >>> Finished "Launching the whole pipeline" in 10.9544 secs
2025-04-07 23:07:21: [retrieval_preprocessing] calculating distances ...
2025-04-07 23:07:21: [retrieval_preprocessing] finished and saved retrieval indices for episode 100011 [episode count 11/21]
[retrieval_preprocessing] for episode 100012 [episode count 12/21], we have num_retrieval=np.int64(954) num_query=np.int64(34)
2025-04-07 23:07:21,518 [INFO]: Using 8 omp threads (processes), consider increasing --nb_cores if you have more
2025-04-07 23:07:21,622 [INFO]: Launching the whole pipeline 04/07/2025, 23:07:21
2025-04-07 23:07:21,623 [INFO]: Reading total number of vectors and dimension 04/07/2025, 23:07:21
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 2601.93it/s]
2025-04-07 23:07:21,650 [INFO]: There are 954 embeddings of dim 49152
2025-04-07 23:07:21,650 [INFO]: >>> Finished "Reading total number of vectors and dimension" in 0.0272 secs
2025-04-07 23:07:21,650 [INFO]: 	Compute estimated construction time of the index 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: 		-> Train: 16.7 minutes
2025-04-07 23:07:21,650 [INFO]: 		-> Add: 0.5 seconds
2025-04-07 23:07:21,650 [INFO]: 		Total: 16.7 minutes
2025-04-07 23:07:21,650 [INFO]: 	>>> Finished "Compute estimated construction time of the index" in 0.0001 secs
2025-04-07 23:07:21,650 [INFO]: 	Checking that your have enough memory available to create the index 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: 196.8MB of memory will be needed to build the index (more might be used if you have more)
2025-04-07 23:07:21,650 [INFO]: 	>>> Finished "Checking that your have enough memory available to create the index" in 0.0001 secs
2025-04-07 23:07:21,650 [INFO]: 	Selecting most promising index types given data characteristics 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: 	>>> Finished "Selecting most promising index types given data characteristics" in 0.0000 secs
2025-04-07 23:07:21,650 [INFO]: 	Creating the index 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: 		-> Instanciate the index Flat 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: 		>>> Finished "-> Instanciate the index Flat" in 0.0001 secs
2025-04-07 23:07:21,650 [INFO]: 		-> Adding the vectors to the index 04/07/2025, 23:07:21
2025-04-07 23:07:21,650 [INFO]: The memory available for adding the vectors is 49.8GB(total available - used by the index)
2025-04-07 23:07:21,650 [INFO]: Using a batch size of 5086 (memory overhead 953.6MB)
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.74it/s]100%|██████████| 4/4 [00:00<00:00, 23.14it/s]
2025-04-07 23:07:21,825 [INFO]: 	Computing best hyperparameters for index knn.index 04/07/2025, 23:07:21
2025-04-07 23:07:21,825 [INFO]: 	>>> Finished "Computing best hyperparameters for index knn.index" in 0.0000 secs
2025-04-07 23:07:21,825 [INFO]: The best hyperparameters are: 
2025-04-07 23:07:21,825 [INFO]: 	Compute fast metrics 04/07/2025, 23:07:21
  0%|          | 0/4 [00:00<?, ?it/s] 75%|███████▌  | 3/4 [00:00<00:00, 26.76it/s]
